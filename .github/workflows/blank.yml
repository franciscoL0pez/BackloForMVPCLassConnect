name: Go & Python CI for ClassConnect API

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mongo:
        image: mongo:latest
        ports:
          - 27017:27017

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Listar archivos después del checkout (debug)
        run: ls -R

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.22.2

      - name: Install Go dependencies
        run: |
          cd backend && go mod tidy

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install Python dependencies
        run: |
          pip install --upgrade pip
          pip install pytest coverage
          pip install -r requirements.txt || echo "No requirements.txt found"

      - name: Definir variables de entorno
        run: echo "MONGO_URI=mongodb://localhost:27017" >> $GITHUB_ENV

      - name: Esperar a que MongoDB esté listo
        run: |
          for i in {1..10}; do
            nc -z localhost 27017 && echo "MongoDB está listo" && exit 0
            echo "Esperando a MongoDB..."
            sleep 3
          done
          echo "MongoDB no se inició a tiempo" && exit 1

      - name: Run Go unit tests with coverage
        run: |
          echo "Ejecutando tests de Go..."
          go test -coverprofile=backend/coverage-go.out -v ./backend/... || (echo "Go tests failed" && exit 1)

      - name: Run Python unit tests with coverage
        run: |
          echo "Ejecutando tests de Python..."
          coverage run -m pytest ./backend/test || (echo "Python tests failed" && exit 1)
          coverage xml -o backend/coverage-python.xml

      - name: Verificar archivos de cobertura generados
        run: |
          echo "Archivos en el directorio actual:"
          ls -lah
          echo "Contenido de backend/coverage-go.out:"
          cat backend/coverage-go.out || echo "El archivo backend/coverage-go.out no existe"
          echo "Contenido de backend/coverage-python.xml:"
          cat backend/coverage-python.xml || echo "El archivo backend/coverage-python.xml no existe"

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: backend/coverage-go.out, backend/coverage-python.xml
          fail_ci_if_error: true
          verbose: true

          
